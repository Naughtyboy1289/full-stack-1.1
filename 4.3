const express = require("express");
const app = express();
const port = 3000;

app.use(express.json());

// Initial seat data (in-memory)
let seats = [
  { id: 1, status: "available", lockUntil: null },
  { id: 2, status: "available", lockUntil: null },
  { id: 3, status: "available", lockUntil: null },
  { id: 4, status: "available", lockUntil: null },
  { id: 5, status: "available", lockUntil: null },
];

// Helper function to automatically unlock expired seats
function unlockExpiredSeats() {
  const now = Date.now();
  seats.forEach((seat) => {
    if (seat.status === "locked" && seat.lockUntil && seat.lockUntil < now) {
      seat.status = "available";
      seat.lockUntil = null;
    }
  });
}

// GET all seats
app.get("/seats", (req, res) => {
  unlockExpiredSeats();
  res.status(200).json(seats.map(({ id, status }) => ({ id, status })));
});

// POST - lock a seat
app.post("/lock/:id", (req, res) => {
  const seatId = parseInt(req.params.id);
  const seat = seats.find((s) => s.id === seatId);

  if (!seat) {
    return res.status(404).json({ message: "Seat not found" });
  }

  unlockExpiredSeats();

  if (seat.status === "booked") {
    return res.status(400).json({ message: "Seat already booked" });
  }

  if (seat.status === "locked") {
    return res.status(400).json({ message: "Seat already locked" });
  }

  // Lock for 1 minute (60000 ms)
  seat.status = "locked";
  seat.lockUntil = Date.now() + 60000;

  res.status(200).json({
    message: "Seat is locked successfully. Confirm within 1 minute.",
  });
});

// POST - confirm a booking
app.post("/confirm/:id", (req, res) => {
  const seatId = parseInt(req.params.id);
  const seat = seats.find((s) => s.id === seatId);

  if (!seat) {
    return res.status(404).json({ message: "Seat not found" });
  }

  unlockExpiredSeats();

  if (seat.status !== "locked") {
    return res.status(400).json({
      message: "Seat is not locked and cannot be booked",
    });
  }

  seat.status = "booked";
  seat.lockUntil = null;

  res.status(200).json({ message: `Seat ${seatId} booked successfully!` });
});

// Start server
app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});

